// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  slug      String    @unique
  content   String
  premium   Boolean  @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Comment   Comment[]
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String?
  link        String?
  premium   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  postId    Int
  author    String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}


model Subscriber {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  createdAt DateTime @default(now())
}


model Customer {
  id            String   @id @default(cuid())
  email         String   @unique
  stripeId      String   @unique   // Stripe customer ID
  subscriptions Subscription[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Subscription {
  id              String   @id @default(cuid())
  stripeId        String   @unique   // Stripe subscription ID
  status          String
  priceId         String
  currentPeriodEnd DateTime
  customerId      String
  customer        Customer @relation(fields: [customerId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
